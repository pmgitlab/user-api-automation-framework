{"name": "test_update_user_invalid_email", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 in [400, 422]\n +  where 404 = <Response [404]>.status_code", "trace": "self = <test_update_user.TestUpdateUser object at 0x00000218F60C51D0>\n\n    @allure.story(\"Update with invalid email format\")\n    def test_update_user_invalid_email(self):\n        api = UserAPI()\n        user = api.create_user(random_username(), random_email(), \"123456\").json()\n        user_id = user.get(\"id\") or user.get(\"data\", {}).get(\"id\", 1)\n        res = api.update_user_email(user_id, \"invalidemail\")\n>       assert res.status_code in [400, 422]\nE       assert 404 in [400, 422]\nE        +  where 404 = <Response [404]>.status_code\n\ntestcases\\test_update_user.py:23: AssertionError"}, "start": 1760525976293, "stop": 1760525980543, "uuid": "b0994d3b-378a-4c8b-9819-f4d9bbfc2d88", "historyId": "c203795e2b8e662ecbf0a8046e5e286c", "testCaseId": "c203795e2b8e662ecbf0a8046e5e286c", "fullName": "testcases.test_update_user.TestUpdateUser#test_update_user_invalid_email", "labels": [{"name": "feature", "value": "Update User Email API"}, {"name": "story", "value": "Update with invalid email format"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_update_user"}, {"name": "subSuite", "value": "TestUpdateUser"}, {"name": "host", "value": "DESKTOP-AC1JF6R"}, {"name": "thread", "value": "4100-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_update_user"}], "titlePath": ["testcases", "test_update_user.py", "TestUpdateUser"]}